'use strict';

const types = `
    type Author {
        id: ID!
        name: String
    }
    extend type Query {
        author(id: ID!) : Author
    }
`;

//TODO: Query and Mutations will be auto generated by parsing the AST of the types
const resolvers = {
    Query: {
        author: async function (_, { id }, context) {
            try {
                return await context.act({ query: 'author' }, { id });
            }
            catch (error) {
                if (error.code === 'act_not_found') {
                    error.statusCode = 404;
                }
                else {
                    error.statusCode = 500;
                }
                throw error;
            }
        }
    }
};

module.exports = { types, resolvers };
